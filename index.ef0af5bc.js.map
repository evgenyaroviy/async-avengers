{"mappings":"oeACA,MAAMA,EAAkBC,SAASC,cAAc,iBACzCC,EAAmBF,SAASC,cAAc,oBAEhDF,EAAgBI,iBAAiB,SAAS,KACxCD,EAAiBE,UAAUC,OAAO,UAAU,IAG9CH,EAAiBC,iBAAiB,SAASG,IACzCA,EAAEC,OAAOH,UAAUI,OAAO,UAAU,IAKtCC,OAAOC,WAAW,sBAAsBP,iBAAiB,UAAUG,IAC5DA,EAAEK,SACPT,EAAiBE,UAAUI,OAAO,UAAU,IAI9C,MAAMI,EAASZ,SAASa,KAClBC,EAAad,SAASC,cAAc,UACpCc,EAAgBf,SAASC,cAAc,kBAE7CW,EAAOR,UAAUY,IAAI,QAErBF,EAAWX,iBAAiB,SAAS,KACnC,GAAIS,EAAOR,UAAUa,SAAS,QAK5B,OAJAL,EAAOR,UAAUI,OAAO,QACxBI,EAAOR,UAAUY,IAAI,SACrBD,EAAcX,UAAUY,IAAI,oBAC5BD,EAAcX,UAAUI,OAAO,cAGjCI,EAAOR,UAAUI,OAAO,SACxBI,EAAOR,UAAUY,IAAI,QACrBD,EAAcX,UAAUY,IAAI,cAC5BD,EAAcX,UAAUI,OAAO,cAAc,IAK/C,MAAMU,EAAelB,SAASmB,iBAAiB,gBAE/CV,OAAON,iBAAiB,QAAQ,KAC9B,MAAMiB,EAAUX,OAAOY,SAASC,SAEhC,OAAOJ,EAAaK,SAAQC,IACtBA,EAAGC,aAAa,UAAYL,GAC9BI,EAAGpB,UAAUY,IAAI,cAAc,GAEjC,ICnDJ,IAAAU,EAAAC,EAAA,SCYA,MAAMC,EAAa,sNAcNC,EAAkB,CAC3BC,OAAQ,MACRC,IAAK,8CACLC,OAAQ,CAAEC,SAAU,QAASC,KAAM,KACnCC,QAAS,CACLC,OAAQ,mBACRC,cAAe,UAAUT,MAuCpBU,EAAe,CACxBR,OAAQ,MACRC,IAAK,gDACLC,OAAQ,CAAEC,SAAU,MACpBE,QAAS,CACLC,OAAQ,mBACRC,cAAe,UAAUT,MDzE3BW,EAAiBvC,SAASC,cAAc,6BAgK9C,SAASuC,EAAeC,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,EA1HnCC,iBACE,MACMC,SAvCRD,iBACE,IAEE,aADuBlB,EAAAoB,QAAMC,QAAQlB,IACrBmB,I,CAChB,MAAOC,GACPC,QAAQD,MAAMA,E,EAiCGE,IACIC,Q,EAEHP,EADAQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAUW,S,GASnDC,QAzCRb,iBACE,IAEE,aADqBlB,EAAAoB,QAAMC,QAAQT,IACrBU,KAAKS,M,CACnB,MAAOR,GACPC,QAAQQ,IAAIT,E,EAoCOU,GACfC,QAjCRhB,eAAgCiB,GAC9BX,QAAQQ,IAAIG,GACZ,MAAMC,EAAU,CACdhC,OAAQ,MACRC,IAAK,sCAAsC8B,WAC3C1B,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIN,IAEE,aADuBX,EAAAoB,QAAMC,QAAQe,IACrBd,I,CAChB,MAAOC,GACPC,QAAQD,MAAMA,E,EAiBMc,CAAiBF,IAKzC,SAAwBhB,EAAWY,GACjC,MAAMO,EAAa,GACnBnB,EAAUtB,SAAQ0C,IAChB,MAAMC,EAAa,GACnBD,EAAME,UAAU5C,SAAQ6C,IACtB,MAAMC,EAAQZ,EAAOa,MAAKC,GAASA,EAAMV,KAAOO,IAC5CC,GACFH,EAAWM,KAAKH,EAAMI,KAAK,IAG/BT,EAAWQ,KAAKN,EAAWQ,KAAK,MAAM,G,CAdxCC,CAAe9B,EAAWY,GAC1BlB,EAAeqC,UAiBjB,SAA8B/B,EAAWY,EAAQoB,GAC/C,MAAMC,EAAc,IAAIC,KAClBC,EAAOF,EAAYG,cACnBC,EAAQxC,OAAOoC,EAAYK,WAAa,GAAGxC,SAAS,EAAG,KACvDyC,EAAY,GAAGJ,KAAQE,OAEvBG,EAAiBxC,EAAUyC,QAC/BrB,GAASA,EAAMsB,cAAgBH,IAE3BI,EAAcnC,KAAKC,MAAMD,KAAKE,SAAW8B,EAAe7B,QACxDiC,EAAcJ,EAAeG,IAEjC3B,GAAI6B,EAAOC,cACXA,EAAaC,eACbA,EAAcL,aACdA,EAAYM,aACZA,EAAYC,WACZA,EAAUC,WACVA,EAAU5B,UACVA,EAAS6B,SACTA,GACEP,GAGF5B,GAAIoC,EACJrC,UAAUsC,UAAEA,KACVrB,EAEEsB,EAAa3D,EAAe,IAAIuC,KAAKQ,GAAca,WACnDC,EAAe7D,EAAe,IAAIuC,KAAKQ,GAAcJ,WAAa,GAClEmB,EAAc,IAAIvB,KAAKQ,GAAcN,cAE3C,IAAIsB,EAAS,KACb,GAAIN,IAAaP,GAA6B,OAAlBC,EAC1B,GAAIM,IAAaP,GAAWb,EAAUjB,QAAQJ,OAAS,EAAG,CACxD,MAAMgD,EAAa3B,EAAUjB,QAAQU,MACnCmC,GAASA,EAAMP,YAAcP,IAE3Ba,IACFD,EAAS,uCAAuCC,EAAWN,Y,MAG7DK,EAASZ,EACL,uCAAuCA,IACvC,uCAAuCO,IAI/C,MAAMQ,EAAoBX,EAAWY,QAAQ,GAEvCzC,EAAaC,EAAUyC,KAAIxC,IAC/B,MAAMyC,EAAQpD,EAAOa,MAAKC,GAASA,EAAMV,KAAOO,IAChD,OAAOyC,EAAQA,EAAMpC,KAAO,EAAE,IAGhC,MAAO,0CAC8B8B,WAAgBX,+EAEhBA,oNAIIO,KAAcE,KAAgBC,kLAI/BT,oBAA+BC,sLAIhCY,4JAIdxC,EAAWQ,KAAK,oHAINsB,oS,CA/FRc,CAAqBjE,EAAWY,EAAQG,E,CAwGrEmD,GAOAxE,EAAepC,iBAAiB,SAAS,SAAU6G,GACjDA,EAAMC,iBACN,MAAM1G,EAASyG,EAAMzG,OACjBA,EAAOH,UAAUa,SAAS,oBAOhC,SAA2BX,GACzB,MAAM4G,EAAkB5G,EAAEC,OAC1B2G,EAAgBC,MAAMC,QAAU,OACHF,EAAgBG,WAAWpH,cACtD,wBAEmBkH,MAAMC,QAAU,O,CAZnCE,CAAkBN,GACTzG,EAAOH,UAAUa,SAAS,wBAcvC,SAAgCX,GAC9BiH,qBAAuBjH,EAAEC,OACzBgH,qBAAqBJ,MAAMC,QAAU,OAEnCG,qBAAqBF,WAAWpH,cAAc,qBAChCkH,MAAMC,QAAU,O,CAlB9BI,CAAuBR,E,IE/K3BtF,EAAAC,EAAA,SAEA,MACM8F,EAAazH,SAASC,cAAc,mBAW1CiD,QAAQQ,IAVY,MAClB,IAIE,OAHYhC,EAAAoB,QAAM4E,IAChB,4GAESC,MAAKC,GAMpB,SAAsB5E,GACpB,IAAI6E,EAAO7E,EACR4D,KAAIkB,GACI,qFAEPA,EAAKC,qBACGD,EAAKE,yEAEaF,EAAKE,4CACLF,EAAKvC,aAAa0C,MAAM,EAAG,iCAItDvD,KAAK,IACR+C,EAAWS,mBAAmB,YAAaL,E,CApBlBM,CAAaP,EAAI5E,KAAKI,QAAQ6E,MAAM,EAAG,K,CAC9D,MAAOhF,GACPC,QAAQQ,IAAI,QAAUT,E,GAGdmF,ICdZ,MAAMC,EAAYrI,SAASC,cAAc,kBAEzCQ,OAAON,iBAAiB,UAAU,WAC1BM,OAAO6H,YAAc,IACrBD,EAAUlB,MAAMC,QAAU,QAE1BiB,EAAUlB,MAAMC,QAAU,M,IAIlCiB,EAAUlI,iBAAiB,SAAS,WAChCM,OAAO8H,SAAS,CACZC,IAAK,EACLC,SAAU,U","sources":["src/js/pages/header.js","src/js/pages/home/monthly_trends.js","src/js/request.js","src/js/pages/home/weekly_trends.js","src/js/components/scrollUp.js"],"sourcesContent":["// mobileMenu\nconst mobileMenuBtnEl = document.querySelector('.mob-menu-btn');\nconst mobileBackdropEl = document.querySelector('.mobile-backdrop');\n\nmobileMenuBtnEl.addEventListener('click', () => {\n  mobileBackdropEl.classList.toggle('is-open');\n});\n\nmobileBackdropEl.addEventListener('click', e => {\n  e.target.classList.remove('is-open');\n});\n\n// Закрываем мобильное меню на более широких экранах\n// в случае изменения ориентации устройства.\nwindow.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n  if (!e.matches) return;\n  mobileBackdropEl.classList.remove('is-open');\n});\n\n//switchTheme\nconst bodyEl = document.body;\nconst themeBtnEl = document.querySelector('.theme');\nconst themeSwitchEl = document.querySelector('.theme__switch');\n\nbodyEl.classList.add('dark');\n\nthemeBtnEl.addEventListener('click', () => {\n  if (bodyEl.classList.contains('dark')) {\n    bodyEl.classList.remove('dark');\n    bodyEl.classList.add('light');\n    themeSwitchEl.classList.add('switchLight');\n    themeSwitchEl.classList.remove('switchDark');\n    return;\n  }\n  bodyEl.classList.remove('light');\n  bodyEl.classList.add('dark');\n  themeSwitchEl.classList.add('switchDark');\n  themeSwitchEl.classList.remove('switchLight');\n});\n\n//pageActive\n\nconst siteNavLinks = document.querySelectorAll('.js-nav-link');\n\nwindow.addEventListener('load', () => {\n  const titleEl = window.location.pathname;\n\n  return siteNavLinks.forEach(el => {\n    if (el.getAttribute('href') === titleEl) {\n      el.classList.add('active-page');\n    }\n  });\n});\n","import axios from 'axios';\nimport { optionsUpcoming } from '../../request';\nimport { optionsGenre } from '../../request';\n\nconst containerMovie = document.querySelector('.container-upcoming-movie');\n\nasync function fetchUpcomingMovie() {\n  try {\n    const response = await axios.request(optionsUpcoming);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchGenresMovie() {\n  try {\n    const genres = await axios.request(optionsGenre);\n    return genres.data.genres;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function fetchMovieImages(id) {\n  console.log(id);\n  const options = {\n    method: 'GET',\n    url: `https://api.themoviedb.org/3/movie/${id}/images`,\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOTZiN2ExNTYwNGYwMmExYWNkMTVhNWJlY2JmMjQ4MCIsInN1YiI6IjY0ODNhYTBhOTkyNTljMDBlMmY0NWE4ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._Sdbi-2PalUFAI7K7hzIv-hc4p92EU6q_yg6_IJJHjA',\n    },\n  };\n\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function responseUpcoming() {\n  const data = await fetchUpcomingMovie();\n  const movieInfo = data.results;\n  const randomIndex = Math.floor(Math.random() * movieInfo.length);\n  const randomMovie = movieInfo[randomIndex];\n  /*Math.random() генерує випадкове число в діапазоні від 0 до 1 (не включно).\n  movieInfo.length повертає кількість елементів у списку movieInfo.\n  Math.random() * movieInfo.length повертає випадкове число від 0 до максимальної кількості елементів у списку.\n  Math.floor() округлює це число до меншого цілого числа.\n  Отримане число є індексом для вибору випадкового фільму зі списку, який зберігається у змінній randomMovie. */\n\n  const id = randomMovie.id;  // Отримуємо id фільму\n  const genres = await fetchGenresMovie(id);  // Передаємо id у функцію\n  const posters = await fetchMovieImages(id);\n  generateGenres(movieInfo, genres);\n  containerMovie.innerHTML = createMarkupUpcoming(movieInfo, genres, posters);\n}\n\nfunction generateGenres(movieInfo, genres) {\n  const genresName = [];\n  movieInfo.forEach(movie => {\n    const genreNames = [];\n    movie.genre_ids.forEach(genreId => {\n      const genre = genres.find(genre => genre.id === genreId);\n      if (genre) {\n        genreNames.push(genre.name);\n      }\n    });\n    genresName.push(genreNames.join(', '));\n  });\n}\n\nfunction createMarkupUpcoming(movieInfo, genres, imageInfo) {\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const thisMonth = `${year}-${month}-01`;\n\n  const filteredMovies = movieInfo.filter(\n    movie => movie.release_date >= thisMonth\n  );\n  const randomIndex = Math.floor(Math.random() * filteredMovies.length);\n  const randomMovie = filteredMovies[randomIndex];\n  const {\n    id: idMovie,\n    backdrop_path,\n    original_title,\n    release_date,\n    vote_average,\n    vote_count,\n    popularity,\n    genre_ids,\n    overview,\n  } = randomMovie;\n\n  const {\n    id: idPoster,\n    posters: [{ file_path }],\n  } = imageInfo;\n\n  const releaseDay = addLeadingZero(new Date(release_date).getDate());\n  const releaseMonth = addLeadingZero(new Date(release_date).getMonth() + 1);\n  const releaseYear = new Date(release_date).getFullYear();\n\n  let poster = null;\n  if (idPoster === idMovie || backdrop_path !== null) {\n    if (idPoster === idMovie && imageInfo.posters.length > 1) {\n      const otherImage = imageInfo.posters.find(\n        image => image.file_path !== backdrop_path\n      );\n      if (otherImage) {\n        poster = `https://image.tmdb.org/t/p/original/${otherImage.file_path}`;\n      }\n    } else {\n      poster = backdrop_path\n        ? `https://image.tmdb.org/t/p/original/${backdrop_path}`\n        : `https://image.tmdb.org/t/p/original/${file_path}`;\n    }\n  }\n\n  const roundedPopularity = popularity.toFixed(1);\n\n  const genreNames = genre_ids.map(genreId => {\n    const genre = genres.find(genre => genre.id === genreId);\n    return genre ? genre.name : '';\n  });\n\n  return `\n    <img class=\"upcoming-image\" src=\"${poster}\" alt=\"${original_title}\">\n    <div class=\"info-container\">\n    <h3 class=\"upcoming-movie-title\">${original_title}</h3>\n    <ul class=\"upcoming-list-details list\">\n      <li class=\"upcoming-list-details-item\">\n        <p class=\"upcoming-list-details-subtitle\">Release date</p>\n        <p class=\"upcoming-realese-date\">${releaseDay}.${releaseMonth}.${releaseYear}</p>\n      </li>\n      <li class=\"upcoming-list-details-item\">\n        <p class=\"upcoming-list-details-subtitle\">Vote / Votes</p>\n        <p class=\"upcoming-votes\"><span>${vote_average}</span> / <span>${vote_count}</span></p>\n      </li>\n      <li class=\"upcoming-list-details-item\">\n        <p class=\"upcoming-list-details-subtitle\">Popularity</p>\n        <p class=\"upcoming-popularity\">${roundedPopularity}</p>\n      </li>\n      <li class=\"upcoming-list-details-item\">\n        <p class=\"upcoming-list-details-subtitle\">Genre</p>\n        <p class=\"genre\">${genreNames.join(', ')}</p>\n      </li>\n    </ul>\n    <h4 class=\"upcoming-about\">ABOUT</h4>\n    <p class=\"upcoming-about-text\">${overview}</p>\n    <button class=\"btn upcoming-btn-add btn-accent\" type=\"button\">\n    <span class=\"btn-in\">Add to my library</span></button>\n    <button class=\"btn upcoming-btn-remove btn-dark\" hidden type=\"button\">\n    <span class=\"btn-in\">Remove from my library</span></button>\n    </div>\n  `;\n}\n\nresponseUpcoming();\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n// BUTTON//\n\ncontainerMovie.addEventListener('click', function (event) {\n  event.preventDefault();\n  const target = event.target;\n  if (target.classList.contains('upcoming-btn-add')) {\n    addToLocalStorage(event);\n  } else if (target.classList.contains('upcoming-btn-remove')) {\n    removeFromLocalStorage(event);\n  }\n});\n\nfunction addToLocalStorage(e) {\n  const addToLibraryBtn = e.target;\n  addToLibraryBtn.style.display = 'none';\n  const removeFromLibraryBtn = addToLibraryBtn.parentNode.querySelector(\n    '.upcoming-btn-remove'\n  );\n  removeFromLibraryBtn.style.display = 'block';\n}\n\nfunction removeFromLocalStorage(e) {\n  removeFromLibraryBtn = e.target;\n  removeFromLibraryBtn.style.display = 'none';\n  const addToLibraryBtn =\n    removeFromLibraryBtn.parentNode.querySelector('.upcoming-btn-add');\n  addToLibraryBtn.style.display = 'block';\n}\n","// Щоб імпортувати використовуйте: import { optionsWeek, optionsUpcoming, optionsSearch, optionsDetails, optionsVideos, optionsGenre } from './шлях до js';\n\n// Приклад використання:\n// axios\n//     .request(optionsWeek)\n//     .then(function (response) {\n//         console.log(response.data);\n//     })\n//     .catch(function (error) {\n//         console.error(error);\n//     });\n\nconst ACCESS_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOTZiN2ExNTYwNGYwMmExYWNkMTVhNWJlY2JmMjQ4MCIsInN1YiI6IjY0ODNhYTBhOTkyNTljMDBlMmY0NWE4ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._Sdbi-2PalUFAI7K7hzIv-hc4p92EU6q_yg6_IJJHjA'\n\n// MOVIES OF THE WEEK\nexport const optionsWeek = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/trending/movie/week',\n    params: { language: 'en-US' },\n    headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${ACCESS_KEY}`\n    }\n};\n\n// UPCOMING MOVIES\nexport const optionsUpcoming = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/movie/upcoming',\n    params: { language: 'en-US', page: '1' },\n    headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${ACCESS_KEY}`\n    }\n};\n\n// SEARCH MOVIES\nexport const optionsSearch = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: { include_adult: 'false', language: 'en-US', page: '1' },\n    headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${ACCESS_KEY}`\n    }\n};\n\n// DETAILS MOVIES\nexport const optionsDetails = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/movie/movie_id',\n    params: { language: 'en-US' },\n    headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${ACCESS_KEY}`\n    }\n};\n\n// VIDEOS MOVIES \nexport const optionsVideos = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/movie/movie_id/videos',\n    params: { language: 'en-US' },\n    headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${ACCESS_KEY}`\n    }\n};\n\n\n// GENRE MOVIES\nexport const optionsGenre = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/genre/movie/list',\n    params: { language: 'en' },\n    headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${ACCESS_KEY}`\n    }\n};","import axios from 'axios';\n\nconst API_KEY = 'e80fd9fb75f14049ed52c4547080278b';\nconst CARD_BLOCK = document.querySelector('.weekly_content');\nconst getResponce = () => {\n  try {\n    const res = axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=${API_KEY}`\n    );\n    return res.then(res => createMarkup(res.data.results.slice(0, 1)));\n  } catch (error) {\n    console.log('error' + error);\n  }\n};\nconsole.log(getResponce());\nfunction createMarkup(data) {\n  let card = data\n    .map(item => {\n      return `<div class=\"card\">\n    <img class=\"test_img\" src=\"https://image.tmdb.org/t/p/w500${\n      item.poster_path\n    }\" alt=\"${item.title}\">\n    <div class=\"card_titles\">\n    <p class=\"card_sup_title\">${item.title}</p>\n    <p class=\"card_sub_title\">${item.release_date.slice(0, 4)}</p>\n  </div>\n    </div>`;\n    })\n    .join('');\n  CARD_BLOCK.insertAdjacentHTML('beforeend', card);\n}\n","const scrollBtn = document.querySelector(\".scroll-up-btn\");\n\nwindow.addEventListener(\"scroll\", function () {\n    if (window.pageYOffset > 300) {\n        scrollBtn.style.display = \"block\";\n    } else {\n        scrollBtn.style.display = \"none\";\n    }\n});\n\nscrollBtn.addEventListener(\"click\", function () {\n    window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n    });\n});"],"names":["$eb9f716130baccd5$var$mobileMenuBtnEl","document","querySelector","$eb9f716130baccd5$var$mobileBackdropEl","addEventListener","classList","toggle","e","target","remove","window","matchMedia","matches","$eb9f716130baccd5$var$bodyEl","body","$eb9f716130baccd5$var$themeBtnEl","$eb9f716130baccd5$var$themeSwitchEl","add","contains","$eb9f716130baccd5$var$siteNavLinks","querySelectorAll","titleEl","location","pathname","forEach","el","getAttribute","$2shzp","parcelRequire","$a426e9e8249f6b8b$var$ACCESS_KEY","$a426e9e8249f6b8b$export$1e8e70bb451b979f","method","url","params","language","page","headers","accept","Authorization","$a426e9e8249f6b8b$export$82dbc43f6dc35c39","$db4dcec9f7e39aa5$var$containerMovie","$db4dcec9f7e39aa5$var$addLeadingZero","value","String","padStart","async","movieInfo","default","request","data","error","console","$db4dcec9f7e39aa5$var$fetchUpcomingMovie","results","Math","floor","random","length","genres","log","$db4dcec9f7e39aa5$var$fetchGenresMovie","posters","id","options","$db4dcec9f7e39aa5$var$fetchMovieImages","genresName","movie","genreNames","genre_ids","genreId","genre1","find","genre","push","name","join","$db4dcec9f7e39aa5$var$generateGenres","innerHTML","imageInfo","currentDate","Date","year","getFullYear","month","getMonth","thisMonth","filteredMovies","filter","release_date","randomIndex","randomMovie","idMovie","backdrop_path","original_title","vote_average","vote_count","popularity","overview","idPoster","file_path","releaseDay","getDate","releaseMonth","releaseYear","poster","otherImage","image","roundedPopularity","toFixed","map","genre2","$db4dcec9f7e39aa5$var$createMarkupUpcoming","$db4dcec9f7e39aa5$var$responseUpcoming","event","preventDefault","addToLibraryBtn","style","display","parentNode","$db4dcec9f7e39aa5$var$addToLocalStorage","removeFromLibraryBtn","$db4dcec9f7e39aa5$var$removeFromLocalStorage","$f3f8ccbc0519c503$var$CARD_BLOCK","get","then","res","card","item","poster_path","title","slice","insertAdjacentHTML","$f3f8ccbc0519c503$var$createMarkup","$f3f8ccbc0519c503$var$getResponce","$f1a27ee66f87eadf$var$scrollBtn","pageYOffset","scrollTo","top","behavior"],"version":3,"file":"index.ef0af5bc.js.map"}